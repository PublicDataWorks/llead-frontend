---
orbs:
  gcp-gke: circleci/gcp-gke@1.1.0
  browser-tools: circleci/browser-tools@1.1.3

defaults:
  - &gcloud-env
    PROJECT_NAME: 'IPNO'
    GOOGLE_PROJECT_ID: 'excellent-zoo-300106'
    GOOGLE_COMPUTE_ZONE: 'us-central1-a'
    GOOGLE_CLUSTER_NAME: 'ipno'
  - &set-push-env
    USER_NAME: 'East Agile'
    USER_EMAIL: 'open-source@eastagile.com'
    DESTINATION_REPOSITORY_USERNAME: 'PublicDataWorks'
    DESTINATION_REPOSITORY_NAME: 'llead-frontend'
  - &set-gcloud-service-key
    command: |
      echo 'export GCLOUD_SERVICE_KEY=$(echo $GCLOUD_SERVICE_KEY_BASE64 | base64 -d)' >> $BASH_ENV
  - &set-deploy-env
    name: Set deployment env
    command: |
      if [ $CIRCLE_BRANCH == "main" ]
      then
        echo 'export NAMESPACE_ENV=ipno-production' >> $BASH_ENV
        echo 'export DOCKER_PRETAG=frontend-production' >> $BASH_ENV
        echo 'export BUILD_ENV=production' >> $BASH_ENV
        echo 'export GA_MEASUREMENT_ID=$GA_MEASUREMENT_ID' >> $BASH_ENV
      else
        echo 'export NAMESPACE_ENV=ipno-staging' >> $BASH_ENV
        echo 'export DOCKER_PRETAG=frontend-staging' >> $BASH_ENV
        echo 'export BUILD_ENV=staging' >> $BASH_ENV
        echo 'export GA_MEASUREMENT_ID=$GA_STAGING_MEASUREMENT_ID' >> $BASH_ENV
      fi

version: 2.1
jobs:
  test:
    working_directory: ~/ipno_frontend
    docker:
      - image: circleci/node:fermium

    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      # - run:
      #     name: Install cypress depepencies
      #     command: |
      #       sudo apt-get update &&
      #       sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - run:
          name: Install dependencies
          command: |
            yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: eslint
          command: yarn lint
      - run:
          name: Tests
          command: yarn test:ci
      # - browser-tools/install-chrome
      # - browser-tools/install-chromedriver
      # - run:
      #     name: Integration Tests
      #     command: yarn itest
      - run:
          name: Coveralls
          command: yarn coveralls

  push_to_public:
    description: Push code to public repository
    machine: true
    environment: *set-push-env
    steps:
      - checkout
      - run:
          name: Push to public
          command: sh bin/public_push.sh

  push_image:
    description: Push docker image
    docker:
      - image: cimg/python:3.8.5
    environment: *gcloud-env
    steps:
      - run: *set-gcloud-service-key
      - run: *set-deploy-env
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: echo "$DOCKER_PRETAG-$CIRCLE_BUILD_NUM" > buildtag
      - persist_to_workspace:
          root: .
          paths:
            - buildtag
      - run:
          name: Build image
          command: |
            docker build \
            --build-arg BUILD_ENV=$BUILD_ENV \
            --build-arg MAPBOX_KEY=${MAPBOX_KEY} \
            --build-arg GA_MEASUREMENT_ID=${GA_MEASUREMENT_ID} \
            -t ipno-frontend .
      - run:
          name: Tag image
          command: |
            docker tag ipno-frontend us.gcr.io/$GOOGLE_PROJECT_ID/ipno-frontend:$(cat buildtag)
            docker tag ipno-frontend us.gcr.io/$GOOGLE_PROJECT_ID/ipno-frontend:$DOCKER_PRETAG-latest
      - gcp-gke/install
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: $GOOGLE_CLUSTER_NAME
          perform-login: true
      - run:
          name: Push image
          command: |
            gcloud auth configure-docker
            docker push us.gcr.io/$GOOGLE_PROJECT_ID/ipno-frontend:$(cat buildtag)
            docker push us.gcr.io/$GOOGLE_PROJECT_ID/ipno-frontend:$DOCKER_PRETAG-latest

  deploy:
    description: Deploy application to Google Kubernetes Engine
    machine: true
    environment: *gcloud-env
    steps:
      - run: *set-gcloud-service-key
      - run: *set-deploy-env
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - gcp-gke/install
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: $GOOGLE_CLUSTER_NAME
          perform-login: true
      - run:
          name: Deploy
          command: |
            export FRONTEND_IMAGE_TAG=$(cat /tmp/workspace/buildtag)
            cat kubernetes/frontend.yml | envsubst | kubectl apply -n $NAMESPACE_ENV -f -

workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - staging
                - main
                - develop

  push_to_public:
    jobs:
      - test:
          filters:
            branches:
              only:
                - develop
      - push_to_public:
          requires:
            - test

  deploy_frontend:
    jobs:
      - test:
          filters:
            branches:
              only:
                - main
                - staging
      - push_image:
          requires:
            - test
      - deploy:
          requires:
            - push_image
      - push_to_public:
          requires:
            - deploy
          filters:
            branches:
              only:
                - main
